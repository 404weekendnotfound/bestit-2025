services:
  backend:
    build:
      context: ./bestit-fastapi       # katalog z Dockerfile backendu
      dockerfile: Dockerfile
    container_name: fastapi_app
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - postgres
    ports:
      - 7562:8000
    networks:
      - bestit-network

  frontend:
    build:
      context: ./bestit-react         # katalog z Dockerfile frontendu
      dockerfile: Dockerfile
    container_name: react_app
    volumes:
      - front_data:/bestit-react
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend

  postgres:
    image: postgres:16
    container_name: postgres_db
    environment:
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=apppassword
      - POSTGRES_DB=appdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bestit-network

  adminer:
    image: adminer:latest
    container_name: adminer_container
    ports:
      - 6580:8080

  debian:
    image: debian:12-slim
    container_name: debian_container
    command: ["sleep", "infinity"]    # utrzymuje kontener w stanie aktywnym
    networks:
      - bestit-network

volumes:
  backend_data:
  front_data:
  postgres_data:

networks:
  bestit-network:
    driver: bridge
